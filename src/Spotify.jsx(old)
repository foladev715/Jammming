let accessToken;
let expiresIn;

const clientId = 'e8137ed92b12456ea547793c22d1d5bd';
const redirectUri = 'https://de55-2607-fea8-3522-bc00-9879-7f13-2539-a9d2.ngrok-free.app/';  // Ensure ngrok URL is correct

const Spotify = {
  getAccessToken() {
    if (accessToken) return accessToken;

    // Check for access token in URL fragment (after #)
    const tokenMatch = window.location.href.match(/access_token=([^&]*)/);
    const expiresMatch = window.location.href.match(/expires_in=([^&]*)/);

    if (tokenMatch && expiresMatch) {
      accessToken = tokenMatch[1];
      expiresIn = Number(expiresMatch[1]);

      // Clear the token after it expires
      window.setTimeout(() => (accessToken = ''), expiresIn * 1000);

      // Clean the URL (remove the fragment)
      window.history.pushState('Access Token', null, '/');

      return accessToken;
    } else {
      // Redirect to Spotify authorization page
      const scope = 'playlist-modify-public';
      const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=${scope}&redirect_uri=${encodeURIComponent(redirectUri)}`;
      window.location = authUrl;
    }
  },

  async search(term) {
    const accessToken = await this.getAccessToken();
    if (!accessToken) {
      console.warn('No access token available yet.');
      return [];
    }

    const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${encodeURIComponent(term)}`, {
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    });

    const jsonResponse = await response.json();
    if (!jsonResponse.tracks) return [];

    return jsonResponse.tracks.items.map((track) => ({
      id: track.id,
      name: track.name,
      artist: track.artists[0].name,
      album: track.album.name,
      uri: track.uri,
    }));
  },
};

export default Spotify;
